/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) 
    {
        if (head == null || head.next == null || k == 0) 
        return head;

        
        ListNode tail = head;
        int length = 1;
        while (tail.next != null) 
        {
            tail = tail.next;
            length++;
        }
        tail.next = head;

        
        k = k % length;
        int move = length - k;
        
        
        ListNode newTail = tail;
        while (move-- > 0) 
        {
            newTail = newTail.next;
        }
        ListNode newHead = newTail.next;

        
        newTail.next = null;
        return newHead;     
    }
}


Example 1:


Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]
Example 2:


Input: head = [0,1,2], k = 4
Output: [2,0,1]
